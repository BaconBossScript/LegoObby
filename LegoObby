--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v70=v2(v0(v30,16));if v19 then local v78=0;local v79;while true do if (v78==1) then return v79;end if (v78==0) then v79=v5(v70,v19);v19=nil;v78=1;end end else return v70;end end end);local function v20(v31,v32,v33) if v33 then local v71=(v31/(2^(v32-(2 -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + ((1497 -(282 + 595)) -(555 + 64)))) ;return v71-(v71%(932 -((2494 -(1523 + 114)) + 74))) ;else local v72=568 -(367 + 201) ;local v73;while true do if (v72==(927 -(193 + 21 + 713))) then v73=(1 + 1)^(v32-1) ;return (((v31%(v73 + v73))>=v73) and 1) or (0 + 0) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==(1066 -(68 + 997))) then return v35;end if (v34==(1270 -(226 + 1044))) then v35=v1(v16,v18,v18);v18=v18 + ((121 -(32 + 85)) -3) ;v34=1;end end end local function v22() local v36=0 + (0 -0) ;local v37;local v38;while true do if (v36==(1 + 0 + 0)) then return (v38 * (1213 -((3545 -2653) + 65))) + v37 ;end if (v36==(180 -(67 + 113))) then v37,v38=v1(v16,v18,v18 + 2 );v18=v18 + (4 -2) ;v36=1;end end end local function v23() local v39,v40,v41,v42=v1(v16,v18,v18 + (955 -(802 + 150)) );v18=v18 + (10 -6) ;return (v42 * 16777216) + (v41 * (118879 -53343)) + (v40 * ((1184 -(915 + 82)) + 69)) + v39 ;end local function v24() local v43=v23();local v44=v23();local v45=2 -1 ;local v46=(v20(v44,1 + 0 ,26 -6 ) * (((2269 -(1020 + 60)) -(1069 + 118))^(72 -40))) + v43 ;local v47=v20(v44,1507 -(998 + 488) ,67 -36 );local v48=((v20(v44,6 + 26 )==1) and  -(1 + 0)) or (1 -0) ;if (v47==(1138 -(116 + 1022))) then if (v46==((0 -0) -0)) then return v48 * (0 + (1423 -(630 + 793))) ;else v47=(2683 -1891) -(368 + 423) ;v45=0 -0 ;end elseif (v47==(2065 -(10 + 8))) then return ((v46==(0 -0)) and (v48 * ((1 + 0)/(442 -(416 + 26))))) or (v48 * NaN) ;end return v8(v48,v47-(3266 -2243) ) * (v45 + (v46/((3 -1)^52))) ;end local function v25(v49) local v50;if  not v49 then local v74=0 -0 ;while true do if ((1747 -(760 + 987))==v74) then v49=v23();if (v49==(1913 -(616 + 1173 + 124))) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -((2110 -1343) -(745 + 21)) );v18=v18 + v49 ;local v51={};for v68=1, #v50 do v51[v68]=v2(v1(v3(v50,v68,v68)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if ((1666 -(970 + 695))==v52) then v55=nil;v56=nil;v52=2;end if (v52==(7 -3)) then while true do if (v53~=1) then else local v97=1990 -(582 + 1408) ;while true do if (v97==1) then v53=6 -4 ;break;end if (v97==(0 -0)) then v56=nil;v57=nil;v97=1;end end end if (2==v53) then local v98=0;while true do if (v98~=(3 -2)) then else v53=3;break;end if (v98==0) then v58=nil;v59=nil;v98=1825 -(1195 + 629) ;end end end if ((3 -0)==v53) then v60=nil;while true do if (v54==(243 -(187 + 54))) then local v104=780 -(162 + 618) ;local v105;while true do if (v104~=(0 + 0)) then else v105=0 + 0 ;while true do if (v105~=0) then else for v114=1,v23() do local v115=0;local v116;local v117;local v118;while true do if ((1 -0)==v115) then v118=nil;while true do if (v116~=1) then else while true do if (v117~=0) then else v118=v21();if (v20(v118,1 -0 ,1 + 0 )==(1636 -(1373 + 263))) then local v336=1000 -(451 + 549) ;local v337;local v338;local v339;local v340;local v341;while true do if (v336~=(0 + 0)) then else v337=0 -0 ;v338=nil;v336=1 -0 ;end if (1~=v336) then else v339=nil;v340=nil;v336=2;end if (v336==(1386 -(746 + 638))) then v341=nil;while true do if (v337==(0 + 0)) then v338=0 -0 ;v339=nil;v337=342 -(218 + 123) ;end if (v337==2) then while true do if (v338==3) then if (v20(v340,3,3)~=1) then else v341[4]=v60[v341[4]];end v55[v114]=v341;break;end if (2==v338) then local v344=0;while true do if ((1581 -(1535 + 46))==v344) then if (v20(v340,1 + 0 ,1 + 0 )==(561 -(306 + 254))) then v341[1 + 1 ]=v60[v341[2]];end if (v20(v340,2,3 -1 )==(1468 -(899 + 568))) then v341[2 + 1 ]=v60[v341[3]];end v344=1;end if ((2 -1)~=v344) then else v338=606 -(268 + 335) ;break;end end end if (v338==(291 -(60 + 230))) then v341={v22(),v22(),nil,nil};if (v339==0) then local v347=0;local v348;while true do if (v347==(811 -(569 + 242))) then v348=0 -0 ;while true do if (0~=v348) then else v341[1 + 2 ]=v22();v341[1028 -(706 + 318) ]=v22();break;end end break;end end elseif (v339==(1252 -(721 + 530))) then v341[3]=v23();elseif (v339==(1273 -(945 + 326))) then v341[3]=v23() -(2^16) ;elseif (v339~=3) then else local v357=0 -0 ;local v358;while true do if (v357==0) then v358=0 + 0 ;while true do if (v358==0) then v341[703 -(271 + 429) ]=v23() -(2^(15 + 1)) ;v341[1504 -(1408 + 92) ]=v22();break;end end break;end end end v338=1088 -(461 + 625) ;end if (v338~=0) then else v339=v20(v118,1290 -(993 + 295) ,3);v340=v20(v118,4,6);v338=1 + 0 ;end end break;end if (v337~=(1172 -(418 + 753))) then else local v342=0 + 0 ;while true do if ((0 + 0)==v342) then v340=nil;v341=nil;v342=1 + 0 ;end if (v342==1) then v337=1 + 1 ;break;end end end end break;end end end break;end end break;end if (v116==(529 -(406 + 123))) then v117=0;v118=nil;v116=1770 -(1749 + 20) ;end end break;end if (v115~=0) then else v116=0;v117=nil;v115=1 + 0 ;end end end for v119=1323 -(1249 + 73) ,v23() do v56[v119-1 ]=v28();end v105=1 + 0 ;end if (v105~=(1146 -(466 + 679))) then else return v58;end end break;end end end if (v54==1) then local v106=0 -0 ;while true do if (1~=v106) then else for v109=2 -1 ,v59 do local v110=1900 -(106 + 1794) ;local v111;local v112;local v113;while true do if (v110==0) then local v121=0;while true do if (v121==(0 + 0)) then v111=0 + 0 ;v112=nil;v121=2 -1 ;end if (v121==1) then v110=2 -1 ;break;end end end if (v110~=1) then else v113=nil;while true do if (v111==(115 -(4 + 110))) then if (v112==(585 -(57 + 527))) then v113=v21()~=(1427 -(41 + 1386)) ;elseif (v112==2) then v113=v24();elseif (v112~=(106 -(17 + 86))) then else v113=v25();end v60[v109]=v113;break;end if ((0 + 0)==v111) then local v219=0;local v220;while true do if (v219==0) then v220=0;while true do if (v220~=(1 -0)) then else v111=1;break;end if (v220==(0 -0)) then v112=v21();v113=nil;v220=1;end end break;end end end end break;end end end v58[3]=v21();v106=2;end if (v106==(168 -(122 + 44))) then v54=2 -0 ;break;end if (v106==0) then v59=v23();v60={};v106=3 -2 ;end end end if (v54==0) then local v107=0;while true do if (v107==(1 + 0)) then v57={};v58={v55,v56,nil,v57};v107=2;end if (v107==2) then v54=1;break;end if (0==v107) then v55={};v56={};v107=1;end end end end break;end if (v53==(65 -(30 + 35))) then local v99=0;while true do if (1==v99) then v53=1 + 0 ;break;end if (v99~=(1257 -(1043 + 214))) then else v54=0 -0 ;v55=nil;v99=1213 -(323 + 889) ;end end end end break;end if (v52==0) then v53=0;v54=nil;v52=2 -1 ;end if (v52==3) then v59=nil;v60=nil;v52=4;end if (2~=v52) then else v57=nil;v58=nil;v52=3;end end end local function v29(v61,v62,v63) local v64=0;local v65;local v66;local v67;while true do if (0==v64) then v65=v61[1];v66=v61[2];v64=1;end if (v64==1) then v67=v61[3];return function(...) local v80=v65;local v81=v66;local v82=v67;local v83=v27;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v94=0,v88 do if (v94>=v82) then v86[v94-v82 ]=v87[v94 + 1 ];else v90[v94]=v87[v94 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=38) then if (v93<=18) then if (v93<=8) then if (v93<=3) then if (v93<=1) then if (v93==0) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>2) then local v124=v92[2];v90[v124]=v90[v124](v13(v90,v124 + 1 ,v85));else v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;end elseif (v93<=5) then if (v93>4) then local v127=v92[2];local v128=v90[v92[3]];v90[v127 + 1 ]=v128;v90[v127]=v128[v92[4]];elseif  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=6) then if (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==7) then do return;end else v90[v92[2]]=v29(v81[v92[3]],nil,v63);end elseif (v93<=13) then if (v93<=10) then if (v93==9) then v90[v92[2]]=v90[v92[3]] * v92[4] ;else local v133=0;local v134;while true do if (0==v133) then v134=v92[2];v90[v134](v13(v90,v134 + 1 ,v85));break;end end end elseif (v93<=11) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif (v93==12) then v84=v92[3];else v90[v92[2]]=v63[v92[3]];end elseif (v93<=15) then if (v93==14) then local v137=0;local v138;local v139;local v140;local v141;while true do if (v137==1) then v85=(v140 + v138) -1 ;v141=0;v137=2;end if (2==v137) then for v306=v138,v85 do local v307=0;while true do if (v307==0) then v141=v141 + 1 ;v90[v306]=v139[v141];break;end end end break;end if (v137==0) then v138=v92[2];v139,v140=v83(v90[v138](v90[v138 + 1 ]));v137=1;end end else local v142=0;local v143;local v144;while true do if (v142==1) then v90[v143 + 1 ]=v144;v90[v143]=v144[v92[4]];break;end if (v142==0) then v143=v92[2];v144=v90[v92[3]];v142=1;end end end elseif (v93<=16) then v90[v92[2]]=v29(v81[v92[3]],nil,v63);elseif (v93==17) then v90[v92[2]]=v63[v92[3]];else v90[v92[2]]=v90[v92[3]] -v90[v92[4]] ;end elseif (v93<=28) then if (v93<=23) then if (v93<=20) then if (v93==19) then local v146=v92[2];v90[v146]=v90[v146]();else local v148=0;local v149;while true do if (v148==0) then v149=v92[2];v90[v149]=v90[v149](v90[v149 + 1 ]);break;end end end elseif (v93<=21) then v90[v92[2]][v92[3]]=v90[v92[4]];elseif (v93==22) then local v231=0;local v232;local v233;local v234;while true do if (v231==1) then v234=0;for v324=v232,v92[4] do local v325=0;while true do if (v325==0) then v234=v234 + 1 ;v90[v324]=v233[v234];break;end end end break;end if (v231==0) then v232=v92[2];v233={v90[v232](v90[v232 + 1 ])};v231=1;end end else v90[v92[2]]=v92[3]~=0 ;end elseif (v93<=25) then if (v93>24) then local v152=v92[2];v90[v152]=v90[v152](v13(v90,v152 + 1 ,v92[3]));else v90[v92[2]]={};end elseif (v93<=26) then local v155=v92[2];local v156,v157=v83(v90[v155](v90[v155 + 1 ]));v85=(v157 + v155) -1 ;local v158=0;for v204=v155,v85 do v158=v158 + 1 ;v90[v204]=v156[v158];end elseif (v93>27) then do return;end elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=33) then if (v93<=30) then if (v93>29) then v90[v92[2]][v92[3]]=v92[4];else local v161=v92[2];local v162={v90[v161](v13(v90,v161 + 1 ,v85))};local v163=0;for v207=v161,v92[4] do v163=v163 + 1 ;v90[v207]=v162[v163];end end elseif (v93<=31) then local v164=v92[2];local v165=v90[v164];local v166=v92[3];for v210=1,v166 do v165[v210]=v90[v164 + v210 ];end elseif (v93>32) then for v288=v92[2],v92[3] do v90[v288]=nil;end else local v236=v92[2];local v237=v92[4];local v238=v236 + 2 ;local v239={v90[v236](v90[v236 + 1 ],v90[v238])};for v290=1,v237 do v90[v238 + v290 ]=v239[v290];end local v240=v239[1];if v240 then v90[v238]=v240;v84=v92[3];else v84=v84 + 1 ;end end elseif (v93<=35) then if (v93>34) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];else local v169=v92[2];v90[v169](v90[v169 + 1 ]);end elseif (v93<=36) then v90[v92[2]]=v90[v92[3]];elseif (v93==37) then local v241=v92[2];local v242={v90[v241](v13(v90,v241 + 1 ,v85))};local v243=0;for v293=v241,v92[4] do local v294=0;while true do if (v294==0) then v243=v243 + 1 ;v90[v293]=v242[v243];break;end end end else local v244=0;local v245;local v246;local v247;while true do if (v244==0) then v245=v92[2];v246=v90[v245];v244=1;end if (v244==1) then v247=v92[3];for v328=1,v247 do v246[v328]=v90[v245 + v328 ];end break;end end end elseif (v93<=57) then if (v93<=47) then if (v93<=42) then if (v93<=40) then if (v93==39) then v90[v92[2]]=v92[3]~=0 ;else v90[v92[2]]=v90[v92[3]] * v92[4] ;end elseif (v93>41) then v90[v92[2]]=v92[3];elseif (v92[2]<v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=44) then if (v93==43) then v90[v92[2]]=v90[v92[3]];else local v178=0;local v179;while true do if (v178==0) then v179=v92[2];v90[v179](v13(v90,v179 + 1 ,v85));break;end end end elseif (v93<=45) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>46) then for v296=v92[2],v92[3] do v90[v296]=nil;end else v90[v92[2]]=v90[v92[3]] + v92[4] ;end elseif (v93<=52) then if (v93<=49) then if (v93==48) then local v180=v92[2];v90[v180](v90[v180 + 1 ]);elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=50) then local v181=v92[2];local v182,v183=v83(v90[v181](v13(v90,v181 + 1 ,v92[3])));v85=(v183 + v181) -1 ;local v184=0;for v213=v181,v85 do local v214=0;while true do if (v214==0) then v184=v184 + 1 ;v90[v213]=v182[v184];break;end end end elseif (v93>51) then v90[v92[2]]();else local v252=v92[2];v90[v252]=v90[v252](v13(v90,v252 + 1 ,v85));end elseif (v93<=54) then if (v93==53) then v90[v92[2]]=v90[v92[3]] + v92[4] ;else local v186=v92[2];local v187=v92[4];local v188=v186 + 2 ;local v189={v90[v186](v90[v186 + 1 ],v90[v188])};for v215=1,v187 do v90[v188 + v215 ]=v189[v215];end local v190=v189[1];if v190 then v90[v188]=v190;v84=v92[3];else v84=v84 + 1 ;end end elseif (v93<=55) then local v191=v92[2];v90[v191](v13(v90,v191 + 1 ,v92[3]));elseif (v93>56) then local v256=0;local v257;while true do if (v256==0) then v257=v92[2];v90[v257]=v90[v257](v90[v257 + 1 ]);break;end end else local v258=v92[2];local v259,v260=v83(v90[v258](v13(v90,v258 + 1 ,v92[3])));v85=(v260 + v258) -1 ;local v261=0;for v298=v258,v85 do v261=v261 + 1 ;v90[v298]=v259[v261];end end elseif (v93<=67) then if (v93<=62) then if (v93<=59) then if (v93>58) then v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;else local v193=0;local v194;local v195;while true do if (1==v193) then for v313=v194 + 1 ,v92[3] do v7(v195,v90[v313]);end break;end if (v193==0) then v194=v92[2];v195=v90[v194];v193=1;end end end elseif (v93<=60) then v84=v92[3];elseif (v93==61) then v90[v92[2]]=v92[3];else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=64) then if (v93>63) then v90[v92[2]]={};elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=65) then local v198=v92[2];v90[v198]=v90[v198](v13(v90,v198 + 1 ,v92[3]));elseif (v93==66) then local v267=v92[2];local v268={v90[v267](v90[v267 + 1 ])};local v269=0;for v303=v267,v92[4] do v269=v269 + 1 ;v90[v303]=v268[v269];end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=72) then if (v93<=69) then if (v93==68) then local v200=v92[2];v90[v200](v13(v90,v200 + 1 ,v92[3]));elseif (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=70) then v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;elseif (v93==71) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=74) then if (v93>73) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]();end elseif (v93<=75) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];elseif (v93==76) then local v274=0;local v275;local v276;while true do if (v274==1) then for v331=v275 + 1 ,v92[3] do v7(v276,v90[v331]);end break;end if (v274==0) then v275=v92[2];v276=v90[v275];v274=1;end end else local v277=v92[2];v90[v277]=v90[v277]();end v84=v84 + 1 ;end end;end end end return v29(v28(),{},v17)(...);end return vv9(),...);
